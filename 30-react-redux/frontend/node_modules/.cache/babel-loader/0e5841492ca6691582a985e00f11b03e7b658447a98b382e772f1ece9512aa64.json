{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // получается что эта функция содержит функции по возврату действий type\n// и центральный reducer\n\nconst initialState = {\n  title: '',\n  author: ''\n};\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: initialState,\n  reducers: {\n    setTitleFilter: (state, action) => {\n      return {\n        ...state,\n        title: action.payload\n      }; //традиционный подход возращаем новый обьект\n      //   state.title = action.payload можно еще вот так изменять текущий state через immen\n    },\n    resetFilter: state => {\n      // reducer для очистки состояния\n      return initialState;\n    },\n    setAuthorFilter: (state, action) => {\n      return state.author = action.payload; //традиционный подход возращаем новый обьект\n      //   state.title = action.payload можно еще вот так изменять текущий state через immen\n    }\n  }\n});\nexport const {\n  setTitleFilter,\n  resetFilter,\n  setAuthorFilter\n} = filterSlice.actions;\nexport const selectTitleFilter = state => state.filter.title;\nexport const selectAuthorFilter = state => state.filter.author;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","title","author","filterSlice","name","reducers","setTitleFilter","state","action","payload","resetFilter","setAuthorFilter","actions","selectTitleFilter","filter","selectAuthorFilter","reducer"],"sources":["/Users/maksimgrigorev/Desktop/react-projects-bogdan/30-react-redux/frontend/src/redux/slices/filterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit' // получается что эта функция содержит функции по возврату действий type\n// и центральный reducer\n\nconst initialState = {\n  title: '',\n  author: '',\n}\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: initialState,\n  reducers: {\n    setTitleFilter: (state, action) => {\n      return { ...state, title: action.payload } //традиционный подход возращаем новый обьект\n      //   state.title = action.payload можно еще вот так изменять текущий state через immen\n    },\n    resetFilter: (state) => {\n      // reducer для очистки состояния\n      return initialState\n    },\n    setAuthorFilter: (state, action) => {\n      return (state.author = action.payload) //традиционный подход возращаем новый обьект\n      //   state.title = action.payload можно еще вот так изменять текущий state через immen\n    },\n  },\n})\n\nexport const { setTitleFilter, resetFilter, setAuthorFilter } =\n  filterSlice.actions\n\nexport const selectTitleFilter = (state) => state.filter.title\nexport const selectAuthorFilter = (state) => state.filter.author\n\nexport default filterSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB,EAAC;AAC/C;;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EAC9BK,IAAI,EAAE,QAAQ;EACdJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,OAAO;QAAE,GAAGD,KAAK;QAAEN,KAAK,EAAEO,MAAM,CAACC;MAAQ,CAAC,EAAC;MAC3C;IACF,CAAC;IACDC,WAAW,EAAGH,KAAK,IAAK;MACtB;MACA,OAAOP,YAAY;IACrB,CAAC;IACDW,eAAe,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAClC,OAAQD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO,CAAC,CAAC;MACvC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,cAAc;EAAEI,WAAW;EAAEC;AAAgB,CAAC,GAC3DR,WAAW,CAACS,OAAO;AAErB,OAAO,MAAMC,iBAAiB,GAAIN,KAAK,IAAKA,KAAK,CAACO,MAAM,CAACb,KAAK;AAC9D,OAAO,MAAMc,kBAAkB,GAAIR,KAAK,IAAKA,KAAK,CAACO,MAAM,CAACZ,MAAM;AAEhE,eAAeC,WAAW,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}