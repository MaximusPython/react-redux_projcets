{"ast":null,"code":"var _jsxFileName = \"/Users/maksimgrigorev/Desktop/react-projects-bogdan/30-react-redux/frontend/src/components/Filter/Filter.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTitleFilter, resetFilter } from '../../redux/slices/filterSlice';\nimport './Filter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = () => {\n  _s();\n  const dispatch = useDispatch();\n  const titleFilter = useSelector(state => state.filter.title); // подписка на изменение свойства title\n\n  const handleTitleFilterChange = e => {\n    // при изменении поля ввода отправляем действия в стор\n    dispatch(setTitleFilter(e.target.value));\n  };\n  const handleResetFilters = () => {\n    dispatch(resetFilter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-block filter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: titleFilter // передаем в качестве значения подписку тем сам делая поле ввода контролируемым\n          ,\n          placeholder: \"Filter by title...\",\n          onChange: handleTitleFilterChange // вызов функции для отправки действия в стор при изменении поля\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleResetFilters,\n        children: \"Reset book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"eVHPj6nz0awRmsSx0GY/nepAuOs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["useDispatch","useSelector","setTitleFilter","resetFilter","jsxDEV","_jsxDEV","Filter","_s","dispatch","titleFilter","state","filter","title","handleTitleFilterChange","e","target","value","handleResetFilters","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/maksimgrigorev/Desktop/react-projects-bogdan/30-react-redux/frontend/src/components/Filter/Filter.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport { setTitleFilter, resetFilter } from '../../redux/slices/filterSlice'\nimport './Filter.css'\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n\n  const titleFilter = useSelector((state) => state.filter.title) // подписка на изменение свойства title\n\n  const handleTitleFilterChange = (e) => {\n    // при изменении поля ввода отправляем действия в стор\n    dispatch(setTitleFilter(e.target.value))\n  }\n\n  const handleResetFilters = () => {\n    dispatch(resetFilter())\n  }\n  return (\n    <div className=\"app-block filter\">\n      <div className=\"filter-row\">\n        <div className=\"filter-group\">\n          <input\n            type=\"text\"\n            value={titleFilter} // передаем в качестве значения подписку тем сам делая поле ввода контролируемым\n            placeholder=\"Filter by title...\"\n            onChange={handleTitleFilterChange} // вызов функции для отправки действия в стор при изменении поля\n          ></input>\n        </div>\n        <button type=\"button\" onClick={handleResetFilters}>\n          Reset book\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,WAAW,QAAQ,gCAAgC;AAC5E,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,WAAW,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC;;EAE/D,MAAMC,uBAAuB,GAAIC,CAAC,IAAK;IACrC;IACAN,QAAQ,CAACN,cAAc,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BT,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC;EACD,oBACEE,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bd,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBd,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3Bd,OAAA;UACEe,IAAI,EAAC,MAAM;UACXJ,KAAK,EAAEP,WAAY,CAAC;UAAA;UACpBY,WAAW,EAAC,oBAAoB;UAChCC,QAAQ,EAAET,uBAAwB,CAAC;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNrB,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACO,OAAO,EAAEV,kBAAmB;QAAAE,QAAA,EAAC;MAEnD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA9BKD,MAAM;EAAA,QACON,WAAW,EAERC,WAAW;AAAA;AAAA2B,EAAA,GAH3BtB,MAAM;AAgCZ,eAAeA,MAAM;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}